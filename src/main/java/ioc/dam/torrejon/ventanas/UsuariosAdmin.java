/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ioc.dam.torrejon.ventanas;

import ioc.dam.torrejon.controladores.Utils;
import ioc.dam.torrejon.controladores.UsuariosController;
import ioc.dam.torrejon.modelos.Usuario;
import java.io.IOException;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlostorrejongaragallo
 */
public class UsuariosAdmin extends javax.swing.JInternalFrame {
    
    private final Object[] columnas = new Object[]{"Id", "Nombre", "Correo", "Fecha de creación", "Administrador"};
    private final DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
    
    Usuario user;
    
    List<Usuario> userL;

    UsuariosController usuario = new UsuariosController();

    DefaultTableModel clean = new DefaultTableModel();

    Integer id, code;
    String idDelete, mail;
    String deleteUser = "Se necesita añadir id de usuario para poder eliminarlo, desea continuar?";

    /**
     * Creates new form OpcionesUsuario
     */
    public UsuariosAdmin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        bListarUsuarios = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        bEliminarUsuario = new javax.swing.JButton();
        bBuscarUsuario = new javax.swing.JButton();

        setClosable(true);
        setTitle("Libros\n");
        setPreferredSize(new java.awt.Dimension(1200, 650));

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Usuarios");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 540, 60));

        userTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(userTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(482, 140, 650, 290));

        bListarUsuarios.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bListarUsuarios.setText("Listar usuarios");
        bListarUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListarUsuariosActionPerformed(evt);
            }
        });
        jPanel1.add(bListarUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 530, 180, 30));

        jPanel2.setBackground(new java.awt.Color(51, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eliminar usuario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Introducir correo del usuario para buscarlo o Id para eliminarlo");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 60, -1, 40));
        jPanel2.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 170, -1));

        bEliminarUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bEliminarUsuario.setText("Eliminar");
        bEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarUsuarioActionPerformed(evt);
            }
        });
        jPanel2.add(bEliminarUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 170, -1));

        bBuscarUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bBuscarUsuario.setText("Buscar usuario");
        bBuscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarUsuarioActionPerformed(evt);
            }
        });
        jPanel2.add(bBuscarUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 170, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 310));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1187, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bListarUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListarUsuariosActionPerformed

        clean = (DefaultTableModel) userTable.getModel();
        while (clean.getRowCount() > 0) {
            clean.removeRow(0);
        }
        try {
            userL = usuario.listarUsuarios();
            if(userL!= null){
            userL.stream().forEach(item -> {
                modelo.addRow(new Object[]{item.getId(), item.getNombre(), item.getCorreo(), item.getContrasena(), item.getFecha_creacion(), item.isAdmin()});
            });
            userTable.setModel(modelo);
            }else{
                Utils.OptionPaneInfo("Error al listar usuarios.", rootPane);
            }
        } catch (IOException | InterruptedException | NoSuchAlgorithmException | KeyManagementException ex) {
            ex.getMessage();
        }

    }//GEN-LAST:event_bListarUsuariosActionPerformed

    private void bEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarUsuarioActionPerformed

        idDelete = txtId.getText();

        if (idDelete.isEmpty()) {
            Utils.OptionPane(deleteUser, this);
        } else {
            id = Integer.valueOf(idDelete);
            try {
                code = usuario.eliminarUsuario(id);
                if(code!=200){
                Utils.OptionPaneInfo("El usuario no pudo ser eliminado", rootPane);
            }
            } catch (IOException | InterruptedException | NoSuchAlgorithmException | KeyManagementException ex) {
                ex.getMessage();
            }
        }
    }//GEN-LAST:event_bEliminarUsuarioActionPerformed

    private void bBuscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarUsuarioActionPerformed

        mail = txtId.getText();
        
        

        clean = (DefaultTableModel) userTable.getModel();
        while (clean.getRowCount() > 0) {
            clean.removeRow(0);
        }
        if (mail.isEmpty()) {
            Utils.OptionPane(deleteUser, this);
        } else {
            //id = Integer.valueOf(idDelete);
            try {
                user = usuario.obtenerUsuarioPorCorreo(mail);
                if(user!=null){
                modelo.addRow(new Object[]{user.getId(), user.getNombre(), user.getCorreo(), user.getFecha_creacion(), user.isAdmin()});
                }else{
                    Utils.OptionPaneInfo("Correo no registrado", this);
                }
            } catch (IOException | InterruptedException | NoSuchAlgorithmException | KeyManagementException ex) {
                ex.getMessage();
            }
        }
    }//GEN-LAST:event_bBuscarUsuarioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBuscarUsuario;
    private javax.swing.JButton bEliminarUsuario;
    private javax.swing.JButton bListarUsuarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtId;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
